name: Update apks

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL of the full OTA update package.'
        required: true
      msg:
        description: 'Message for the commit.'
        required: true

permissions:
  contents: write

jobs:
  update:
    name: Update apks
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        id: setup
        run: |
          echo FILENAME=$(basename "${{ github.event.inputs.url }}") >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install git+https://github.com/geniucker-org/payload-dumper

      - name: Download prebuild fuse.erofs
        run: |
          wget -O /tmp/erofs-utils.zip https://github.com/sekaiacg/erofs-utils/releases/download/v1.8.1-240810/erofs-utils-v1.8.1-gddbed144-Android_x86_64-2408101419.zip
          unzip /tmp/erofs-utils.zip -d /tmp/erofs-utils
          chmod -R +x /tmp/erofs-utils

      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore cached my_stock.img
        id: restore_cache_my_stock
        uses: actions/cache/restore@v4
        with:
          path: output/my_stock.img
          key: ${{ steps.setup.outputs.FILENAME }}-my_stock
      
      - name: Restore cached my_heytap.img
        id: restore_cache_my_heytap
        uses: actions/cache/restore@v4
        with:
          path: output/my_heytap.img
          key: ${{ steps.setup.outputs.FILENAME }}-my_heytap

      - name: Download my_stock and my_heytap partition from the OTA update
        run: |
          if [ ! -f output/my_stock.img ]; then
            python -m payload_dumper --partitions my_stock "${{ github.event.inputs.url }}"
          fi
          if [ ! -f output/my_heytap.img ]; then
            python -m payload_dumper --partitions my_heytap "${{ github.event.inputs.url }}"
          fi

      - name: Save cache my_stock.img
        if: ${{ steps.restore_cache_my_stock.outputs.cache-hit != 'true' }}
        id: save_cache_my_stock
        uses: actions/cache/save@v4
        with:
          path: output/my_stock.img
          key: ${{ steps.restore_cache_my_stock.outputs.cache-primary-key }}

      - name: Save cache my_heytap.img
        if: ${{ steps.restore_cache_my_heytap.outputs.cache-hit != 'true' }}
        id: save_cache_my_heytap
        uses: actions/cache/save@v4
        with:
          path: output/my_heytap.img
          key: ${{ steps.restore_cache_my_heytap.outputs.cache-primary-key }}

      - name: Update files
        run: |
          git checkout --orphan apk
          git reset --hard

          # mount images
          mkdir -p mnt/my_stock
          mkdir -p mnt/my_heytap
          /tmp/erofs-utils/fuse.erofs output/my_stock.img mnt/my_stock
          /tmp/erofs-utils/fuse.erofs output/my_heytap.img mnt/my_heytap

          # list folders in my_stock/priv-app
          echo "List of folders in my_stock/priv-app"
          ls -l mnt/my_stock/priv-app
          echo
          # list folders in heytap/priv-app
          echo "List of folders in my_heytap/priv-app"
          ls -l mnt/my_heytap/priv-app
          echo

          # update files
          if [ -d product ]; then
            rm -rf product
          fi
          if [ -d system ]; then
            rm -rf system
          fi
          mkdir -p product/priv-app
          cp -r mnt/my_stock/priv-app/KeKeUserCenter product/priv-app/
          cp -r mnt/my_stock/priv-app/KeKeUserCenterAccount product/priv-app/
          if [ -d mnt/my_heytap/priv-app/OpenID ]; then
            cp -r mnt/my_heytap/priv-app/OpenID product/priv-app/
          elif [ -d mnt/my_stock/priv-app/OpenID ]; then
            cp -r mnt/my_stock/priv-app/OpenID product/priv-app/
          else
            echo "OpenID not found"
            exit 1
          fi
          if [ -d mnt/my_heytap/priv-app/KeKeMarket ]; then
            cp -r mnt/my_heytap/priv-app/KeKeMarket product/priv-app/
          elif [ -d mnt/my_stock/priv-app/KeKeMarket ]; then
            cp -r mnt/my_stock/priv-app/KeKeMarket product/priv-app/
          else
            echo "KeKeMarket not found"
            exit 1
          fi
          
          # unmount images
          umount mnt/my_stock
          umount mnt/my_heytap
    
      - name: Cleanup
        run: |
          rm -rf mnt
          rm -rf output

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # clear hystory
          git add -A
          git commit -m "${{ github.event.inputs.msg }}"
          git push -f origin apk
